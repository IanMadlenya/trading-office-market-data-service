ext {
    libs = libsMap(
            slf4j_api: 'org.slf4j:slf4j-api:1.7.16',
            log4j: 'log4j:log4j:1.2.17',
            slf4j_log4j12: 'org.slf4j:slf4j-log4j12:1.7.16',
            jaxen: 'jaxen:jaxen:1.1.6',
            jdom: 'jdom:jdom:1.1',
            jackson: 'com.fasterxml.jackson.core:jackson-core:2.7.1',
            jackson_databind: 'com.fasterxml.jackson.core:jackson-databind:2.7.1-1',
            jackson_annotations: 'com.fasterxml.jackson.core:jackson-annotations:2.7.1',
            guava: 'com.google.guava:guava:19.0',
            spring: [
                boot: 'org.springframework.boot:spring-boot-starter',
                boot_actuator: 'org.springframework.boot:spring-boot-starter-actuator',
                boot_web: 'org.springframework.boot:spring-boot-starter-web',
                boot_amqp: 'org.springframework.boot:spring-boot-starter-amqp',
                eureka_server: 'org.springframework.cloud:spring-cloud-starter-eureka-server',
                eureka_client: 'org.springframework.cloud:spring-cloud-starter-eureka',
                feign: 'org.springframework.cloud:spring-cloud-starter-feign',
                cloud_config: 'org.springframework.cloud:spring-cloud-starter-config',
                jms: 'org.springframework:spring-jms',
                test: 'org.springframework:spring-test'
            ],
            test: [
                    junit: 'junit:junit:4.12',
                    assertj: 'org.assertj:assertj-core:3.3.0',
                    mockito: 'org.mockito:mockito-core:2.0.42-beta'
            ],
            jasperreports: dependencies.create('net.sf.jasperreports:jasperreports:6.2.0') {
                exclude group: 'org.olap4j', module: 'olap4j'
            },
            itext: 'com.lowagie:itext:2.1.7',
            finance_yahoo: 'com.yahoofinance-api:YahooFinanceAPI:2.0.1',
            okhttp: 'com.squareup.okhttp3:okhttp:3.1.2',
            swift: dependencies.create('com.prowidesoftware:pw-swift-core:SRU2015-7.7') {
                exclude group: 'javax.xml', module: 'jaxb-api'
                exclude group: 'javax.xml', module: 'jaxb-impl'
            },
            jaxb: 'javax.xml.bind:jaxb-api:2.2.12',
            csveed: 'org.csveed:csveed:0.4.2',
            springfox: [
                    swagger_ui: 'io.springfox:springfox-swagger-ui:2.3.1',
                    swagger2: 'io.springfox:springfox-swagger2:2.3.1'
            ]
    )
}

def libsMap(Map<String, ?> map) {
    def processMap
    processMap = { innerMap ->
        innerMap.each {
            if (it.value instanceof Map) {
                innerMap[it.key] = processMap(it.value)
            }
        }
        innerMap.asImmutable().withDefault {
            throw new InvalidUserDataException(
                    "No entry '$it' in dependency map (candidates: ${innerMap.keySet().sort().join(", ")})" )
        }
    }
    processMap(map)
}
